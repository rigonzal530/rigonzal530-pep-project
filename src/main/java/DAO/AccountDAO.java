package DAO;

import java.sql.*;

import Model.Account;
import Util.ConnectionUtil;

public class AccountDAO {
    // methods needed for project problems
    // 1. insertUser, usernameAlreadyExists

    /**
     * Inserts a new user account in the Account table
     * @param acc - the Account object to be inserted (without an account_id)
     * @return the newly inserted Account along with its account_id on successful insertion, or null on failure
     */
    public Account insertUser(Account acc) {
        // attempts to establish a connection with the database
        Connection connection = ConnectionUtil.getConnection();

        try {
            // only need to define two parameters since account_id is automatically generated by the database
            String insert = "INSERT INTO account (username, password) VALUES (?, ?)";

            // setting up a prepared statement with parameters from the account to be inserted
            // the second parameter MUST be included to make automatically generated keys retrievable later
            PreparedStatement ps = connection.prepareStatement(insert, Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, acc.getUsername());
            ps.setString(2, acc.getPassword());

            // executing the insert statement
            ps.executeUpdate();

            // extracting the account_id generated on successful insert
            ResultSet accountIDResultSet = ps.getGeneratedKeys();
            if (accountIDResultSet.next()) {
                // returns a fully populated Account object 
                int generatedAccountID = accountIDResultSet.getInt("account_id");
                return new Account(generatedAccountID, acc.getUsername(), acc.getPassword());
            }
        }
        catch(SQLException e) {
            System.out.println(e.getMessage());
        }

        return null;
    }

    /**
     * Checks if a username is already in use within the Account table
     * @param username - the username to be checked
     * @return - true if a matching username was found, false if it wasn't
     */
    public boolean usernameAlreadyExists(String username) {
        // defaults usernameExists to false before executing the query
        boolean usernameExists = false;

        // attempts to establish a connection with the database
        Connection connection = ConnectionUtil.getConnection();

        try {
            // searches the database for a matching username. (this will only ever return 0 or 1 rows since the 'username' col is unique)
            String query = "SELECT * FROM account WHERE username = ?";

            // setting up a prepared statement along with its parameter
            PreparedStatement ps = connection.prepareStatement(query);
            ps.setString(1, username);

            // if a result set was generated, a matching username was found. in that case, set usernameExists to true
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                usernameExists = true; 
            }
        }
        catch(SQLException e) {
            System.out.println(e.getMessage());
        }

        return usernameExists;
    }
}
